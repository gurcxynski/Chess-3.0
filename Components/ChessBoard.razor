@using Backend.Core
@using Backend.Engine

@code { 
    [Parameter] public Board board { get; set; } = null!;
    [Parameter] public EventCallback<(int col, int row)> OnSquareSelected { get; set; }
    
    private async Task HandleSquareClick(int col, int row)
    {
        await OnSquareSelected.InvokeAsync((col, row));
    }
    
    Piece? selected; 
}
<h1> Turn: @(board.WhiteToMove ? "White" : "Black") </h1>
<div class="chess-board">
    @for (var row = 7; row >= 0; row--)
    {
        <div class="board-row">
            @for (var col = 0; col < 8; col++)
            {
                var localCol = col;
                var localRow = row;
                var piece = board.GetPieceAt(col, row);
                var isSelected = selected is not null && selected.Position.X == localCol && selected.Position.Y == localRow;
                <button class="@(isSelected ? "selected" : string.Empty)" @onclick="() => HandleSquareClick(localCol, localRow)"> 

                    @piece?.UnicodeIcon() 
                    @if (col == 7)
                    {
                        <span class="row-number">@(row + 1)</span>
                    }
                    @if (row == 0)
                    {
                        <span class="col-letter">@((char)('a' + col))</span>
                    }
                </button>
            }
        </div>
    }
</div>